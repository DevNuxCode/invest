services:
  # ---------- Front‑end ----------
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: react-app
    ports:
      - "3000:80"            # host port 3000 → container 80
    env_file:
      - .env                # your React env vars (if any)
    restart: unless-stopped
    depends_on:
      - n8n                  # wait for n8n to be ready
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro  # custom nginx config
      - /etc/letsencrypt:/etc/letsencrypt:ro  # SSL certs (if using HTTPS)

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"          # HTTP
      - "443:443"        # HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro

  # ---------- n8n ----------
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"        # n8n UI & webhook endpoint
    environment:
      # Basic auth – change for production!
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      # (Optional) set a different DB backend, e.g., Postgres:
      # - DB_TYPE=postgresdb
      # - DB_POSTGRESDB_HOST=db
      # - DB_POSTGRESDB_PORT=5432
      # - DB_POSTGRESDB_DATABASE=n8n
      # - DB_POSTGRESDB_USER=n8n
      # - DB_POSTGRESDB_PASSWORD=secret
    volumes:
      - n8n-data:/home/node/.n8n   # persistence
  
  certbot:
    image: certbot/certbot:v2.10.0
    container_name: certbot
    restart: unless-stopped
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/html:/var/www/html:ro   # para challenge HTTP
    command: >
      sh -c "
        # 1️⃣  Obtener el certificado
        certbot certonly --webroot -w /var/www/html \
        --email devnuxcode@gmail.com --agree-tos --no-eff-email \
        -d ep.clouddevnux.online -d www.clouddevnux.online || exit 1;

        # 2️⃣  Renovar el certificado automáticamente
        while true; do sleep 12h; certbot renew --post-hook 'nginx -s reload'; done
      "

volumes:
  n8n-data:
 